{"version":3,"file":"static/js/331.915a0739.chunk.js","mappings":"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","sources":["components/appointments/Appointment.js","components/appointments/AppointmentsGrid.js","components/filters/Search.js","components/filters/Filters.js","components/filters/AppointmentsFilter.js","utils/functions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableContainer,\r\n  Stack,\r\n  Select,\r\n  IconButton,\r\n  Editable,\r\n  EditableInput,\r\n  EditablePreview,\r\n  Tooltip,\r\n  Card,\r\n  CardBody,\r\n  Avatar,\r\n  useBreakpointValue,\r\n  Checkbox,\r\n  Button,\r\n  Link,\r\n  PopoverContent,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverHeader,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  Code,\r\n  PopoverFooter,\r\n  ButtonGroup,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  DeleteIcon,\r\n  CopyIcon,\r\n  DragHandleIcon,\r\n  AtSignIcon,\r\n  ChevronDownIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport {\r\n  useDeleteApplicantMutation,\r\n  useUpdateApplicantMutation,\r\n  useUpdateAppointmentMutation,\r\n  useDeleteAppointmentMutation,\r\n  useGetAllUsersQuery,\r\n  useDeassignUserMutation,\r\n  useAssignUserMutation,\r\n} from \"../../store/api-slice\";\r\nimport {\r\n  getAppointmentCode,\r\n  getLoginCode,\r\n  isInputDisabled,\r\n} from \"../../utils/functions\";\r\n\r\nfunction Appointment({ appointment, attributes, permission, isFetching }) {\r\n  const { applicants } = appointment;\r\n\r\n  return (\r\n    <Card variant=\"outline\" size=\"sm\">\r\n      <CardBody>\r\n        <AppointmentDetails\r\n          permission={permission}\r\n          appointment={appointment}\r\n          attributes={attributes}\r\n          isFetching={isFetching}\r\n        />\r\n        <Applicants\r\n          permission={permission}\r\n          applicants={applicants}\r\n          isFetching={isFetching}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Applicants({ applicants, permission, isFetching }) {\r\n  const [deleteApplicant] = useDeleteApplicantMutation();\r\n  const [updateApplicant] = useUpdateApplicantMutation();\r\n  const [editedValues, setEditedValues] = useState({});\r\n\r\n  // controllers\r\n  function handleDeleteClick(id) {\r\n    deleteApplicant(id);\r\n  }\r\n\r\n  async function handleEditClick(id) {\r\n    await updateApplicant({\r\n      id,\r\n      data: editedValues[id],\r\n    });\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleCancelClick(id) {\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleChange(id, property, value) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: { ...prevState[id], [property]: value },\r\n    }));\r\n  }\r\n\r\n  function handleEdit(id, property) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: {\r\n        ...prevState[id],\r\n        [property]: applicants.find((applicant) => applicant._id === id)[\r\n          property\r\n        ],\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"sm\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th textAlign=\"center\">Image</Th>\r\n            <Th textAlign=\"center\">First Name</Th>\r\n            <Th textAlign=\"center\">Last Name</Th>\r\n            <Th textAlign=\"center\">Passport</Th>\r\n            <Th textAlign=\"center\">Date Of Birth</Th>\r\n            {!isInputDisabled(permission, \"delete\") && (\r\n              <Th textAlign=\"center\">Actions</Th>\r\n            )}\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {applicants.length > 0 ? (\r\n            applicants.map(\r\n              ({\r\n                _id = null,\r\n                firstName,\r\n                lastName,\r\n                passportNumber,\r\n                dateOfBirth,\r\n                image,\r\n              }) => (\r\n                <Tr key={_id}>\r\n                  <Td textAlign=\"center\">\r\n                    <Avatar\r\n                      style={{ cursor: \"pointer\" }}\r\n                      src={image}\r\n                      as={Link}\r\n                      href={image}\r\n                      target=\"_blank\"\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"firstName\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      value={editedValues[_id]?.firstName ?? firstName}\r\n                      isFetching={isFetching}\r\n                      id={_id}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"lastName\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      value={editedValues[_id]?.lastName ?? lastName}\r\n                      isFetching={isFetching}\r\n                      id={_id}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"passportNumber\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={_id}\r\n                      value={\r\n                        editedValues[_id]?.passportNumber ?? passportNumber\r\n                      }\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"dateOfBirth\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={_id}\r\n                      value={\r\n                        editedValues[_id]?.dateOfBirth?.split(\"T\")[0] ??\r\n                        dateOfBirth.split(\"T\")[0]\r\n                      }\r\n                    />\r\n                  </Td>\r\n\r\n                  {!isInputDisabled(permission, \"delete\") && (\r\n                    <Td textAlign=\"center\">\r\n                      <Stack direction=\"row\" align=\"center\" justify=\"center\">\r\n                        <IconButton\r\n                          aria-label=\"Delete\"\r\n                          size=\"sm\"\r\n                          icon={<DeleteIcon />}\r\n                          onClick={() => handleDeleteClick(_id)}\r\n                        />\r\n                      </Stack>\r\n                    </Td>\r\n                  )}\r\n                </Tr>\r\n              )\r\n            )\r\n          ) : (\r\n            <Tr>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n              <Td textAlign=\"center\">NULL</Td>\r\n            </Tr>\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nfunction AppointmentDetails({\r\n  permission,\r\n  appointment,\r\n  attributes,\r\n  isFetching,\r\n}) {\r\n  const { ownerEmuns, visaEmuns, statusEmuns } = attributes;\r\n  const {\r\n    _id: appointmentId,\r\n    numberOfApplicants,\r\n    expectedTravelDate,\r\n    email,\r\n    phone,\r\n    note,\r\n    status,\r\n    owner,\r\n    visa,\r\n  } = appointment;\r\n\r\n  const { data: usersRes, isLoading: isUsersLoading } = useGetAllUsersQuery();\r\n  const [deleteAppointment] = useDeleteAppointmentMutation();\r\n  const [deassignUser] = useDeassignUserMutation();\r\n  const [assignUser] = useAssignUserMutation();\r\n  const [updateAppointment] = useUpdateAppointmentMutation();\r\n\r\n  const [usersState, setUsersState] = useState({});\r\n  const [editedValues, setEditedValues] = useState({});\r\n  const layout = useBreakpointValue({ base: \"default\", md: \"fixed\" });\r\n\r\n  useEffect(() => {\r\n    if (!isUsersLoading) {\r\n      const states = {};\r\n      usersRes?.user.map(\r\n        (user) => (states[user._id] = isUserAssigned(user._id, appointment))\r\n      );\r\n\r\n      setUsersState(states);\r\n    }\r\n  }, [appointment, isUsersLoading, usersRes]);\r\n\r\n  function isUserAssigned(id, appointment) {\r\n    return appointment.assignedUsers.includes(id);\r\n  }\r\n\r\n  async function handleUserChange(e, { userId, appointmentId }) {\r\n    const isChecked = e.target.checked;\r\n    if (isChecked) {\r\n      await assignUser({ userId, appointmentId });\r\n    } else {\r\n      await deassignUser({ userId, appointmentId });\r\n    }\r\n    setUsersState((prevState) => ({ ...prevState, [userId]: isChecked }));\r\n  }\r\n\r\n  function handleEditClick(id) {\r\n    updateAppointment({\r\n      id,\r\n      data: editedValues[id],\r\n    });\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleEdit(id, property) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: {\r\n        ...prevState[id],\r\n        [property]: appointment[property],\r\n      },\r\n    }));\r\n  }\r\n\r\n  function handleCancelClick(id) {\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleChange(id, property, value) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: { ...prevState[id], [property]: value },\r\n    }));\r\n  }\r\n\r\n  function handleSelectChange(e, fieldName) {\r\n    updateAppointment({\r\n      id: appointmentId,\r\n      data: { [fieldName]: e.target.value },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Stack direction=\"row\">\r\n      <Card mb={5} size=\"sm\" width=\"full\">\r\n        <CardBody>\r\n          <TableContainer>\r\n            <Table size=\"sm\" layout={layout} width=\"full\" variant=\"simple\">\r\n              <Tbody>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Expected Travel Date:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"expectedTravelDate\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={\r\n                        editedValues[appointmentId]?.expectedTravelDate?.split(\r\n                          \"T\"\r\n                        )[0] ?? expectedTravelDate.split(\"T\")[0]\r\n                      }\r\n                    />\r\n                  </Td>\r\n                  <Td>\r\n                    <Text as=\"b\">Status:</Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"status\"\r\n                      value={editedValues[appointmentId]?.status ?? status}\r\n                      handleChange={handleSelectChange}\r\n                      enums={statusEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Email:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"email\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.email ?? email}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    <Text as=\"b\">Visa:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"visa\"\r\n                      value={editedValues[appointmentId]?.visa ?? visa}\r\n                      handleChange={handleSelectChange}\r\n                      enums={visaEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Mobile Number:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"phone\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.phone ?? phone}\r\n                    />\r\n                  </Td>\r\n                  <Td>\r\n                    <Text as=\"b\">Owner:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"owner\"\r\n                      value={editedValues[appointmentId]?.owner ?? owner}\r\n                      handleChange={handleSelectChange}\r\n                      enums={ownerEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Note:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"note\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.note ?? (note || \"-\")}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    <Text as=\"b\">No. Applicants:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <Text>{numberOfApplicants?.toString()}</Text>\r\n                  </Td>\r\n                </Tr>\r\n              </Tbody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardBody>\r\n      </Card>\r\n      <Stack>\r\n        {!isInputDisabled(permission, \"delete\") && (\r\n          <Tooltip label=\"Delete\" placement=\"right\">\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              size=\"sm\"\r\n              icon={<DeleteIcon />}\r\n              variant=\"outline\"\r\n              onClick={() => deleteAppointment(appointmentId)}\r\n            />\r\n          </Tooltip>\r\n        )}\r\n        {!isInputDisabled(permission, \"assign\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Assign\"\r\n                size=\"sm\"\r\n                icon={<DragHandleIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent>\r\n              <PopoverHeader fontWeight=\"semibold\">Users</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                {!isUsersLoading &&\r\n                  usersRes?.user.map(({ email, _id }) => (\r\n                    <Checkbox\r\n                      key={_id}\r\n                      onChange={(e) =>\r\n                        handleUserChange(e, { userId: _id, appointmentId })\r\n                      }\r\n                      isChecked={usersState[_id]}>\r\n                      {email}\r\n                    </Checkbox>\r\n                  ))}\r\n              </PopoverBody>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n        {!isInputDisabled(permission, \"copy_code\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Copy code\"\r\n                size=\"sm\"\r\n                icon={<CopyIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent width={600} textAlign=\"left\">\r\n              <PopoverHeader fontWeight=\"semibold\">Code</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                <Code\r\n                  whiteSpace=\"pre-wrap\"\r\n                  sx={{ wordBreak: \"break-all\" }}\r\n                  maxH={400}\r\n                  overflowY=\"scroll\">\r\n                  {getAppointmentCode(appointment)}\r\n                </Code>\r\n              </PopoverBody>\r\n              <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                <ButtonGroup size=\"sm\">\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    onClick={() =>\r\n                      navigator.clipboard.writeText(\r\n                        getAppointmentCode(appointment)\r\n                      )\r\n                    }>\r\n                    Copy\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </PopoverFooter>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n        {!isInputDisabled(permission, \"copy_email\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Copy code\"\r\n                size=\"sm\"\r\n                icon={<AtSignIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent width={600} textAlign=\"left\">\r\n              <PopoverHeader fontWeight=\"semibold\">Code</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                <Code\r\n                  width=\"full\"\r\n                  whiteSpace=\"pre-wrap\"\r\n                  sx={{ wordBreak: \"break-all\" }}>\r\n                  {getLoginCode(appointment.email)}\r\n                </Code>\r\n              </PopoverBody>\r\n              <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                <ButtonGroup size=\"sm\">\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    onClick={() =>\r\n                      navigator.clipboard.writeText(\r\n                        getLoginCode(appointment.email)\r\n                      )\r\n                    }>\r\n                    Copy\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </PopoverFooter>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nfunction InputArea({\r\n  permission,\r\n  fieldName,\r\n  value,\r\n  id,\r\n  handleEditClick,\r\n  handleCancelClick,\r\n  handleEdit,\r\n  handleChange,\r\n  isFetching,\r\n}) {\r\n  return isInputDisabled(permission, fieldName) ? (\r\n    <Text textAlign=\"center\">{value}</Text>\r\n  ) : (\r\n    <Editable\r\n      onSubmit={() => handleEditClick(id)}\r\n      onCancel={() => handleCancelClick(id)}\r\n      onEdit={() => handleEdit(id, fieldName)}\r\n      isDisabled={isInputDisabled(permission, fieldName)}\r\n      submitOnBlur={false}\r\n      value={value}>\r\n      {isFetching ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Tooltip label=\"Click to edit\">\r\n          <EditablePreview />\r\n        </Tooltip>\r\n      )}\r\n      <EditableInput\r\n        onChange={(e) => handleChange(id, fieldName, e.target.value)}\r\n      />\r\n    </Editable>\r\n  );\r\n}\r\n\r\nfunction SelectArea({\r\n  permission,\r\n  fieldName,\r\n  value,\r\n  handleChange,\r\n  enums,\r\n  isFetching,\r\n}) {\r\n  return isInputDisabled(permission, fieldName) ? (\r\n    <Text textAlign=\"center\">{value}</Text>\r\n  ) : (\r\n    <Select\r\n      textAlign=\"center\"\r\n      size=\"sm\"\r\n      value={value}\r\n      icon={isFetching ? <Spinner /> : <ChevronDownIcon />}\r\n      onChange={(e) => handleChange(e, fieldName)}>\r\n      {enums.map((label, index) => (\r\n        <option key={index} value={label}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n","import React from \"react\";\r\n\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Appointment from \"./Appointment\";\r\n\r\nfunction AppointmentsGrid({\r\n  permission,\r\n  appointments,\r\n  attributes,\r\n  isFetching,\r\n}) {\r\n  return (\r\n    <Stack spacing={5}>\r\n      {appointments.map((appointment) => (\r\n        <Appointment\r\n          key={appointment._id}\r\n          appointment={appointment}\r\n          attributes={attributes}\r\n          permission={permission}\r\n          isFetching={isFetching}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default AppointmentsGrid;\r\n","import React from \"react\";\r\nimport { FormControl, Input } from \"@chakra-ui/react\";\r\n\r\nfunction Search({ searchTerm, setSearchTerm }) {\r\n  return (\r\n    <FormControl>\r\n      <Input\r\n        variant=\"filled\"\r\n        type=\"text\"\r\n        placeholder=\"Search by passport number\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Stack, Select } from \"@chakra-ui/react\";\r\nfunction Filters({ filterField, setFilterFields, attributes }) {\r\n  const onSelectChange = (field, value) => {\r\n    setFilterFields((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\">\r\n      <SelectFilter\r\n        options={attributes.ownerEmuns}\r\n        value={filterField.owner}\r\n        onChange={(value) => onSelectChange(\"owner\", value)}\r\n      />\r\n      <SelectFilter\r\n        options={attributes.visaEmuns}\r\n        value={filterField.visa}\r\n        onChange={(value) => onSelectChange(\"visa\", value)}\r\n      />\r\n      <SelectFilter\r\n        options={attributes.statusEmuns}\r\n        value={filterField.status}\r\n        onChange={(value) => onSelectChange(\"status\", value)}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nconst SelectFilter = ({ options, value, onChange }) => (\r\n  <Select value={value} onChange={(e) => onChange(e.target.value)}>\r\n    <option value=\"\">All</option>\r\n    {options.map((value, index) => (\r\n      <option key={index} value={value}>\r\n        {value}\r\n      </option>\r\n    ))}\r\n  </Select>\r\n);\r\n\r\nexport default Filters;\r\n","import { Card, CardBody, Stack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Search from \"./Search\";\r\nimport Filters from \"./Filters\";\r\n\r\nfunction AppointmentsFilter({\r\n  searchTerm,\r\n  setSearchTerm,\r\n  filterField,\r\n  setFilterFields,\r\n  attributes,\r\n}) {\r\n  return (\r\n    <Card variant=\"outline\" size=\"sm\">\r\n      <CardBody>\r\n        <Stack>\r\n          <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n          <Filters\r\n            filterField={filterField}\r\n            setFilterFields={setFilterFields}\r\n            attributes={attributes}\r\n          />\r\n        </Stack>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AppointmentsFilter;\r\n","const getAppointmentCode = (appointment) => {\r\n  const { applicants, email, phone, expectedTravelDate } = appointment;\r\n  const newApplicants = applicants.map((applicant) => ({\r\n    ...applicant,\r\n    dateOfBirth: applicant.dateOfBirth.split(\"T\")[0],\r\n    expectedTravelDate: expectedTravelDate.split(\"T\")[0],\r\n    email,\r\n    phone,\r\n  }));\r\n\r\n  return `\r\n      \r\n      applicants = ${JSON.stringify(newApplicants)}\r\n      document\r\n        .querySelector(\"app-no-form #phone\")\r\n        .dispatchEvent(new Event(\"ngModelChange\"));\r\n      \r\n      applicants.map(async (applicant, index) => {\r\n        await fillInput(\"name\", applicant.firstName, index);\r\n        await fillInput(\"surname\", applicant.lastName, index);\r\n        await fillInput(\"birthLocalDate\", applicant.dateOfBirth, index);\r\n        await fillInput(\"passport\", applicant.passportNumber, index);\r\n        await fillInput(\"applicantEmail\", applicant.email, index);\r\n        await fillInput(\"phone\", applicant.phone, index);\r\n        await fillInput(\r\n          \"expectedDepartureLocalDate\",\r\n          applicant.expectedTravelDate,\r\n          index\r\n        );\r\n      });\r\n      \r\n      async function fillInput(field, value, folderIndex) {\r\n        let ele = document.querySelectorAll(\r\n          'app-no-form form input[name=\"' + field +'\"]'\r\n        )[folderIndex];\r\n        ele.value = value;\r\n        ele.dispatchEvent(new Event(\"input\"));\r\n        ele.dispatchEvent(new Event(\"change\"));\r\n        ele.dispatchEvent(new Event(\"compositionend\"));\r\n      }\r\n      `;\r\n};\r\n\r\nconst getLoginCode = (appointment) => {\r\n  return `\r\n      document.getElementsByName(\"email\")[1].value = \"${appointment}\";\r\n      document.getElementsByName(\"password\")[0].value  = \"Ahmed@2842663\";\r\n      \r\n      `;\r\n};\r\n\r\nconst isInputDisabled = (premission, fieldName) => {\r\n  switch (premission) {\r\n    case \"admin\":\r\n      return false;\r\n    case \"static\":\r\n      return true;\r\n    case \"createdBy\":\r\n      return fieldName === \"assign\";\r\n    case \"assigned\":\r\n      return fieldName !== \"status\" && fieldName !== \"email\";\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nconst filterAppointments = (appointments, fieldName, searchTerm) => {\r\n  return appointments.filter(\r\n    (appointment) =>\r\n      appointment.applicants.length === 0 ||\r\n      appointment.applicants.some((applicant) =>\r\n        applicant[fieldName].startsWith(searchTerm.toUpperCase())\r\n      )\r\n  );\r\n};\r\n\r\nexport {\r\n  getAppointmentCode,\r\n  getLoginCode,\r\n  isInputDisabled,\r\n  filterAppointments,\r\n};\r\n"],"names":["Applicants","_ref2","applicants","permission","isFetching","_useDeleteApplicantMu","useDeleteApplicantMutation","deleteApplicant","_slicedToArray","_useUpdateApplicantMu","useUpdateApplicantMutation","updateApplicant","_useState","useState","_useState2","editedValues","setEditedValues","handleEditClick","_x","_handleEditClick","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","data","prevState","newState","_objectSpread","stop","handleCancelClick","handleChange","property","value","_defineProperty","handleEdit","find","applicant","_id","_jsx","TableContainer","children","_jsxs","Table","size","Thead","Tr","Th","textAlign","isInputDisabled","Tbody","length","map","_ref3","_editedValues$_id$fir","_editedValues$_id","_editedValues$_id$las","_editedValues$_id2","_editedValues$_id$pas","_editedValues$_id3","_editedValues$_id$dat","_editedValues$_id4","_editedValues$_id4$da","_ref3$_id","firstName","lastName","passportNumber","dateOfBirth","image","Td","Avatar","style","cursor","src","as","Link","href","target","InputArea","fieldName","split","Stack","direction","align","justify","IconButton","icon","DeleteIcon","onClick","AppointmentDetails","_ref4","_editedValues$appoint","_editedValues$appoint2","_editedValues$appoint3","_editedValues$appoint4","_editedValues$appoint5","_editedValues$appoint6","_editedValues$appoint7","_editedValues$appoint8","_editedValues$appoint9","_editedValues$appoint10","_editedValues$appoint11","_editedValues$appoint12","_editedValues$appoint13","_editedValues$appoint14","_editedValues$appoint15","appointment","attributes","ownerEmuns","visaEmuns","statusEmuns","appointmentId","numberOfApplicants","expectedTravelDate","email","phone","note","status","owner","visa","_useGetAllUsersQuery","useGetAllUsersQuery","usersRes","isUsersLoading","isLoading","_useDeleteAppointment","useDeleteAppointmentMutation","deleteAppointment","_useDeassignUserMutat","useDeassignUserMutation","deassignUser","_useAssignUserMutatio","useAssignUserMutation","assignUser","_useUpdateAppointment","useUpdateAppointmentMutation","updateAppointment","_useState3","_useState4","usersState","setUsersState","_useState5","_useState6","layout","useBreakpointValue","base","md","_handleUserChange","_callee2","e","_ref5","userId","isChecked","_context2","checked","handleSelectChange","useEffect","states","user","assignedUsers","includes","isUserAssigned","Card","mb","width","CardBody","variant","Text","overflow","SelectArea","enums","toString","Tooltip","label","placement","Popover","isLazy","PopoverTrigger","DragHandleIcon","PopoverContent","PopoverHeader","fontWeight","PopoverArrow","PopoverCloseButton","PopoverBody","_ref6","Checkbox","onChange","_x2","_x3","handleUserChange","CopyIcon","Code","whiteSpace","sx","wordBreak","maxH","overflowY","getAppointmentCode","PopoverFooter","display","justifyContent","ButtonGroup","Button","colorScheme","navigator","clipboard","writeText","AtSignIcon","getLoginCode","_ref7","Editable","onSubmit","onCancel","onEdit","isDisabled","submitOnBlur","Spinner","EditablePreview","EditableInput","_ref8","Select","ChevronDownIcon","index","_ref","appointments","spacing","Appointment","searchTerm","setSearchTerm","FormControl","Input","type","placeholder","SelectFilter","options","filterField","setFilterFields","onSelectChange","field","Search","Filters","newApplicants","concat","JSON","stringify","premission","filterAppointments","filter","some","startsWith","toUpperCase"],"sourceRoot":""}