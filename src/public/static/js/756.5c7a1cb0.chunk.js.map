{"version":3,"file":"static/js/756.5c7a1cb0.chunk.js","mappings":"yMAyDA,IAlDuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAIIC,EAAAA,EAAAA,MAHFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACaC,EAAMJ,EAAnBK,UAAaD,OAGPE,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACRG,GAAoBC,EAAAA,EAAAA,MAAbC,GAA+BC,EAAAA,EAAAA,GAAAH,EAAA,GAAtB,GAChBI,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAqCH,EAAAA,EAAAA,GAAAC,EAAA,GAAzB,GAEbG,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAwB,GAAfL,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SACL,WAAtB1B,EAAS+B,SAAqB,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAC1BjB,EAAU,CAAEY,MAAAA,EAAOC,SAAAA,IAAYM,MAAK,SAACC,GACzC,GAAIA,EAAIC,MACN,OAAOC,QAAQC,IAAIH,EAAIC,MAAMG,MAE/B,IAAQC,EAASL,EAAII,KAAbC,KACR9B,EAAS,CAAE+B,KAAM,aAAcC,QAASF,IACxCG,EAAAA,EAAQC,IAAI,WAAYC,KAAKC,UAAUN,GAAO,CAC5CO,QAAS,KAEX/C,EAAS,IACX,IAAG,KAAD,KAEsB,wBAAtBE,EAAS+B,SAAkC,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACvCb,EAAa,CAAEQ,MAAAA,EAAOC,SAAAA,IAAYM,MAAK,SAACC,GAC5C,GAAIA,EAAIC,MACN,OAAOC,QAAQC,IAAIH,EAAIC,MAAMG,MAE/B,IAAQC,EAASL,EAAII,KAAbC,KACR9B,EAAS,CAAE+B,KAAM,aAAcC,QAASF,IACxCG,EAAAA,EAAQC,IAAI,WAAYC,KAAKC,UAAUN,GAAO,CAC5CO,QAAS,KAEX/C,EAAS,IACX,IAAG,KAAD,mBAAA8B,EAAAkB,OAAA,GAAAvB,EAAA,KAEL,gBA3BawB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,KA6Bd,MAAO,CACL/B,SAAAA,EACAd,SAAAA,EACAC,aAAAA,EACAC,OAAAA,EAEJ,C,iNCvCe,SAAS4C,IACtB,IAAAC,GAA6CC,EAAAA,EAAAA,KAArClC,EAAQiC,EAARjC,SAAUd,EAAQ+C,EAAR/C,SAAUC,EAAY8C,EAAZ9C,aAE5B,OACEgD,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,KAAK,QAAOC,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,KAAM,IAAKC,KAAK,KAAKC,QAAQ,WAAUL,SAAA,EAC3CH,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAAAN,UACTH,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CAACC,UAAU,SAASJ,KAAK,KAAIJ,SAAC,sBAIxCH,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAAAT,UACPH,EAAAA,EAAAA,KAAA,QAAMnC,SAAUb,EAAaa,GAAUsC,UACrCC,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAACC,QAAS,EAAEX,SAAA,EAChBC,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAACC,YAAU,EAAAb,SAAA,EACrBH,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAd,SAAC,mBACXH,EAAAA,EAAAA,KAACkB,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJjC,KAAK,SACDnC,EAAS,QAAS,CAAEqE,UAAU,OAEpCpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAgB,CAAAlB,SAAC,8BAGpBC,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAACC,YAAU,EAAAb,SAAA,EACrBH,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAd,SAAC,cACXH,EAAAA,EAAAA,KAACkB,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJjC,KAAK,YACDnC,EAAS,WAAY,CAAEqE,UAAU,OAEvCpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAgB,CAAAlB,SAAC,yBAEpBH,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACpC,KAAK,SAASqC,YAAY,OAAMpB,SAAC,8BASvD,C","sources":["hooks/useLoginSubmit.js","pages/Register.js"],"sourcesContent":["import Cookies from \"js-cookie\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useLoginMutation, useRegisterMutation } from \"../store/api-slice\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nconst useLoginSubmit = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { dispatch } = useContext(UserContext);\r\n  const [userLogin] = useLoginMutation();\r\n  const [userRegister] = useRegisterMutation();\r\n\r\n  const onSubmit = async ({ email, password }) => {\r\n    if (location.pathname === \"/login\") {\r\n      await userLogin({ email, password }).then((res) => {\r\n        if (res.error) {\r\n          return console.log(res.error.data);\r\n        }\r\n        const { user } = res.data;\r\n        dispatch({ type: \"USER_LOGIN\", payload: user });\r\n        Cookies.set(\"userInfo\", JSON.stringify(user), {\r\n          expires: 30,\r\n        });\r\n        navigate(\"/\");\r\n      });\r\n    }\r\n    if (location.pathname === \"/team/auth/register\") {\r\n      await userRegister({ email, password }).then((res) => {\r\n        if (res.error) {\r\n          return console.log(res.error.data);\r\n        }\r\n        const { user } = res.data;\r\n        dispatch({ type: \"USER_LOGIN\", payload: user });\r\n        Cookies.set(\"userInfo\", JSON.stringify(user), {\r\n          expires: 30,\r\n        });\r\n        navigate(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    onSubmit,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useLoginSubmit;\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Center,\r\n  FormErrorMessage,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport useLoginSubmit from \"../hooks/useLoginSubmit\";\r\n\r\nexport default function Register() {\r\n  const { onSubmit, register, handleSubmit } = useLoginSubmit();\r\n\r\n  return (\r\n    <Center minH=\"100vh\">\r\n      <Card minW={400} size=\"lg\" variant=\"elevated\">\r\n        <CardHeader>\r\n          <Heading textAlign=\"center\" size=\"lg\">\r\n            Create account\r\n          </Heading>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Stack spacing={6}>\r\n              <FormControl isRequired>\r\n                <FormLabel>Email address</FormLabel>\r\n                <Input\r\n                  type=\"email\"\r\n                  {...register(\"email\", { required: true })}\r\n                />\r\n                <FormErrorMessage>Invalid email address</FormErrorMessage>\r\n              </FormControl>\r\n\r\n              <FormControl isRequired>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  {...register(\"password\", { required: true })}\r\n                />\r\n                <FormErrorMessage>Invalid password</FormErrorMessage>\r\n              </FormControl>\r\n              <Button type=\"submit\" colorScheme=\"blue\">\r\n                Create account\r\n              </Button>\r\n            </Stack>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </Center>\r\n  );\r\n}\r\n"],"names":["navigate","useNavigate","location","useLocation","_useForm","useForm","register","handleSubmit","errors","formState","dispatch","useContext","UserContext","_useLoginMutation","useLoginMutation","userLogin","_slicedToArray","_useRegisterMutation","useRegisterMutation","userRegister","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","email","password","wrap","_context","prev","next","pathname","then","res","error","console","log","data","user","type","payload","Cookies","set","JSON","stringify","expires","stop","_x","apply","arguments","Register","_useLoginSubmit","useLoginSubmit","_jsx","Center","minH","children","_jsxs","Card","minW","size","variant","CardHeader","Heading","textAlign","CardBody","Stack","spacing","FormControl","isRequired","FormLabel","Input","_objectSpread","required","FormErrorMessage","Button","colorScheme"],"sourceRoot":""}