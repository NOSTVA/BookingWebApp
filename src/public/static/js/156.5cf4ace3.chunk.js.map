{"version":3,"file":"static/js/156.5cf4ace3.chunk.js","mappings":"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","sources":["components/form/CreateAppointmentForm.jsx","pages/Create.js","utils/functions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Card,\r\n  CardBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Heading,\r\n  IconButton,\r\n  Text,\r\n  HStack,\r\n  Spinner,\r\n  ButtonGroup,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  useCreateAppointmentMutation,\r\n  useGetAppointmentsQuery,\r\n} from \"../../store/api-slice\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { getAppointmentCode } from \"../../utils/functions\";\r\n\r\nconst CreateAppointmentForm = () => {\r\n  const [\r\n    createAppointment,\r\n    { isLoading, data, isSuccess, error, isError: isCreateError },\r\n  ] = useCreateAppointmentMutation();\r\n  const [errMsg, setErrMsg1] = useState(\"\");\r\n  const [fnameErr, setFnameErr] = useState(\"\");\r\n  const [expicDate, setExpicDate] = useState(\"\");\r\n  const [emailMsg, setEmailMsg] = useState(\"\");\r\n  const [phoneMsg, setPhoneMsg] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [expectedDate, setExpectedDate] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"none\");\r\n  const [visa, setVisa] = useState(\"none\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [applicants, setApplicants] = useState([\r\n    {\r\n      firstName: { value: \"\", err: \"\" },\r\n      lastName: { value: \"\", err: \"\" },\r\n      passportNumber: { value: \"\", err: \"\" },\r\n      dateOfBirth: { value: \"\", err: \"\" },\r\n      image: { value: \"\", err: \"\" },\r\n    },\r\n  ]);\r\n\r\n  const { data: optionsData, isSuccess: optionsIsSuccess } =\r\n    useGetAppointmentsQuery();\r\n\r\n  const toast = useToast();\r\n  const handleInputChange = (e) => setInput(e.target.value);\r\n\r\n  const isError = isSubmitted && (input === \"\" || phoneNumber === \"\");\r\n\r\n  function getApplicantsData(applicants) {\r\n    return applicants.map((applicant) => {\r\n      return Object.fromEntries(\r\n        Object.entries(applicant).map(([field, { value }]) => [field, value])\r\n      );\r\n    });\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setIsSubmitted(true);\r\n\r\n    // Check if all required fields are filled\r\n    const isFieldsEmpty = applicants.some(\r\n      (applicant) =>\r\n        !applicant.firstName.value ||\r\n        !applicant.lastName.value ||\r\n        !applicant.passportNumber.value\r\n    );\r\n\r\n    if (phoneNumber.startsWith(\"0\")) {\r\n      toast({\r\n        title: \"Phone number shouldnt't start with 0\",\r\n        status: \"warning\",\r\n        isClosable: false,\r\n        position: \"top\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n    if (phoneNumber.length < 10) {\r\n      toast({\r\n        title: \"Phone number should be 10 numbers\",\r\n        status: \"warning\",\r\n        isClosable: false,\r\n        position: \"top\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      input === \"\" ||\r\n      phoneNumber === \"\" ||\r\n      isFieldsEmpty ||\r\n      expectedDate === \"\"\r\n    ) {\r\n      toast({\r\n        title: \"Please fill in all required fields\",\r\n        status: \"warning\",\r\n        isClosable: false,\r\n        position: \"top\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n    const today = new Date();\r\n    const isDateValid = applicants.every((applicant) => {\r\n      const applicantDate = new Date(applicant.dateOfBirth.value);\r\n      return applicantDate.getTime() < today.getTime();\r\n    });\r\n    if (!isDateValid) {\r\n      toast({\r\n        title: \"Please enter valid date of birth\",\r\n        status: \"warning\",\r\n        isClosable: false,\r\n        position: \"top\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const formData = {\r\n      expectedTravelDate: e.target.elements.date.value,\r\n      email: input,\r\n      phone: \"+20\" + phoneNumber,\r\n      owner: owner,\r\n      visa: visa,\r\n      status: status,\r\n      note: note,\r\n      applicants: getApplicantsData(applicants),\r\n    };\r\n\r\n    await createAppointment(formData);\r\n  };\r\n  const handleOwnerChange = (e) => {\r\n    setOwner(e.target.value);\r\n  };\r\n  const handleVisaChange = (e) => {\r\n    setVisa(e.target.value);\r\n  };\r\n  const handleStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  const handleNoteChange = (e) => {\r\n    setNote(e.target.value);\r\n  };\r\n  const handleTravelDateChange = (e) => {\r\n    setExpectedDate(e.target.value);\r\n  };\r\n  const handlePhoneKeyDown = (e) => {\r\n    if (\r\n      e.key === \"Backspace\" ||\r\n      e.key === \"Delete\" ||\r\n      e.key === \"a\" ||\r\n      e.key === \"A\"\r\n    ) {\r\n      return;\r\n    }\r\n    if (!/^\\d+$/.test(e.key)) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast({\r\n        title: \"Form submitted successfully!\",\r\n        description: (\r\n          <Text>\r\n            Copy code ?\r\n            <ButtonGroup size=\"sm\">\r\n              <Button\r\n                onClick={() =>\r\n                  navigator.clipboard.writeText(\r\n                    getAppointmentCode({\r\n                      ...data.appointment[0],\r\n                      applicants: data.applicants.map(\r\n                        ([applicant]) => applicant\r\n                      ),\r\n                    })\r\n                  )\r\n                }>\r\n                Copy\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Text>\r\n        ),\r\n        status: \"success\",\r\n        duration: null,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n\r\n      setExpectedDate(\"\");\r\n      setInput(\"\");\r\n      setPhoneNumber(\"\");\r\n      setApplicants([\r\n        {\r\n          firstName: { value: \"\", err: \"\" },\r\n          lastName: { value: \"\", err: \"\" },\r\n          passportNumber: { value: \"\", err: \"\" },\r\n          dateOfBirth: { value: \"\", err: \"\" },\r\n          image: { value: \"\", err: \"\" },\r\n        },\r\n      ]);\r\n    } else {\r\n      if (error?.data.message) {\r\n        toast({\r\n          title: `${error.data.message}`,\r\n          status: \"error\",\r\n          duration: null,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n      }\r\n    }\r\n  }, [isSuccess, toast, error, data]);\r\n  const handlePhoneChange = (e) => {\r\n    const newPhoneNumber = e.target.value.replace(/\\D/g, \"\");\r\n    setPhoneNumber(newPhoneNumber);\r\n  };\r\n\r\n  const handleAddApplicant = () => {\r\n    if (applicants.length < 5) {\r\n      setApplicants([\r\n        ...applicants,\r\n        {\r\n          firstName: { value: \"\", err: \"\" },\r\n          lastName: { value: \"\", err: \"\" },\r\n          passportNumber: { value: \"\", err: \"\" },\r\n          dateOfBirth: { value: \"\", err: \"\" },\r\n          image: { value: \"\", err: \"\" },\r\n        },\r\n      ]);\r\n    } else {\r\n      toast({\r\n        title: \"maximum number of applicants is 5\",\r\n        status: \"warning\",\r\n        duration: null,\r\n        isClosable: false,\r\n        position: \"top\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleApplicantChange = (index, field, value) => {\r\n    const newApplicants = [...applicants];\r\n    newApplicants[index][field].value = value;\r\n    setApplicants(newApplicants);\r\n  };\r\n\r\n  const handleDeleteApplicant = (index) => {\r\n    if (applicants.length > 1) {\r\n      toast({\r\n        title: \"Applicant deleted\",\r\n        status: \"warning\",\r\n        duration: null,\r\n        isClosable: false,\r\n        position: \"top\",\r\n        render: () => (\r\n          <Stack bg=\"gray.300\" p={4} borderRadius=\"3\">\r\n            <Text color=\"black\" mb={2}>\r\n              Are you sure you want to delete this applicant?\r\n            </Text>\r\n            <HStack spacing={4} justifyContent=\"center\">\r\n              <Button\r\n                colorScheme=\"red\"\r\n                fontWeight=\"bold\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  handleConfirmDelete(index);\r\n                  toast.closeAll();\r\n                }}>\r\n                Yes\r\n              </Button>\r\n              <Button size=\"sm\" bg=\"black\" onClick={() => toast.closeAll()}>\r\n                No\r\n              </Button>\r\n            </HStack>\r\n          </Stack>\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = (index) => {\r\n    const newApplicants = [...applicants];\r\n    newApplicants.splice(index, 1);\r\n    setApplicants(newApplicants);\r\n  };\r\n  return (\r\n    <Stack>\r\n      {!isLoading ? (\r\n        <Stack spacing={5}>\r\n          <Heading size=\"lg\">Appointment</Heading>\r\n          <form onSubmit={handleSubmit}>\r\n            <Card variant=\"outline\">\r\n              <CardBody>\r\n                <Box mb={4}>\r\n                  <FormControl isInvalid={isError}>\r\n                    <FormLabel>Expected travel date</FormLabel>\r\n                    <Input\r\n                      name=\"date\"\r\n                      placeholder=\"Select Date and Time\"\r\n                      size=\"md\"\r\n                      type=\"date\"\r\n                      value={expectedDate}\r\n                      onChange={(e) => handleTravelDateChange(e)}\r\n                    />\r\n                    <FormErrorMessage>{expicDate}</FormErrorMessage>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box mb={4}>\r\n                  <FormControl isInvalid={isError}>\r\n                    <FormLabel>Email</FormLabel>\r\n                    <Input\r\n                      placeholder=\"Email\"\r\n                      type=\"email\"\r\n                      value={input}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                    <FormErrorMessage>{emailMsg}</FormErrorMessage>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box>\r\n                  <FormControl isInvalid={isError}>\r\n                    <FormLabel>Phone number</FormLabel>\r\n                    <InputGroup>\r\n                      <InputLeftAddon children=\"+20\" />\r\n                      <Input\r\n                        type=\"tel\"\r\n                        placeholder=\"phone number\"\r\n                        pattern=\"[0-9]*\"\r\n                        maxLength=\"10\"\r\n                        value={phoneNumber}\r\n                        onKeyDown={handlePhoneKeyDown}\r\n                        onChange={(e) => handlePhoneChange(e)}\r\n                      />\r\n                    </InputGroup>\r\n                    <FormErrorMessage>{phoneMsg}</FormErrorMessage>\r\n                  </FormControl>\r\n                </Box>\r\n                <HStack mt={5}>\r\n                  <FormControl>\r\n                    <FormLabel>Owner</FormLabel>\r\n\r\n                    <Select\r\n                      textAlign=\"center\"\r\n                      size=\"sm\"\r\n                      value={owner}\r\n                      onChange={(e) => handleOwnerChange(e)}>\r\n                      {optionsIsSuccess &&\r\n                        optionsData.attributes.ownerEmuns.map(\r\n                          (value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <FormLabel>Visa</FormLabel>\r\n\r\n                    <Select\r\n                      textAlign=\"center\"\r\n                      value={visa}\r\n                      size=\"sm\"\r\n                      onChange={(e) => handleVisaChange(e)}>\r\n                      {optionsIsSuccess &&\r\n                        optionsData.attributes.visaEmuns.map((value, index) => (\r\n                          <option key={index} value={value}>\r\n                            {value}\r\n                          </option>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </HStack>\r\n                <HStack mt={5}>\r\n                  <FormControl>\r\n                    <FormLabel>status</FormLabel>\r\n                    <Select\r\n                      textAlign=\"center\"\r\n                      value={status}\r\n                      size=\"sm\"\r\n                      onChange={(e) => handleStatusChange(e)}>\r\n                      {optionsIsSuccess &&\r\n                        optionsData.attributes.statusEmuns.map(\r\n                          (value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <FormLabel>Note</FormLabel>\r\n                    <Input\r\n                      placeholder=\"-\"\r\n                      textAlign=\"center\"\r\n                      value={note}\r\n                      size=\"sm\"\r\n                      onChange={handleNoteChange}\r\n                    />\r\n                  </FormControl>\r\n                </HStack>\r\n              </CardBody>\r\n            </Card>\r\n            <Heading size=\"lg\" mt={4}>\r\n              Applicants\r\n            </Heading>\r\n            {applicants.map((applicant, index) => (\r\n              <Card key={index} variant=\"outline\" mt={4} mb={4}>\r\n                <CardBody>\r\n                  <Box position=\"absolute\" top={1} right={2}>\r\n                    {applicants.length > 1 ? (\r\n                      <IconButton\r\n                        icon={<AiOutlineClose />}\r\n                        onClick={() => handleDeleteApplicant(index)}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Box>\r\n                  <Box mb={4}>\r\n                    <FormControl isInvalid={isError}>\r\n                      <FormLabel>First name</FormLabel>\r\n                      <Input\r\n                        placeholder=\"First name\"\r\n                        size=\"md\"\r\n                        type=\"text\"\r\n                        value={applicant.firstName.value}\r\n                        onChange={(e) =>\r\n                          handleApplicantChange(\r\n                            index,\r\n                            \"firstName\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                      <FormErrorMessage>{fnameErr}</FormErrorMessage>\r\n                    </FormControl>\r\n                  </Box>\r\n                  <Box mb={4}>\r\n                    <FormLabel>Last name</FormLabel>\r\n                    <Input\r\n                      placeholder=\"Last name\"\r\n                      size=\"md\"\r\n                      type=\"text\"\r\n                      value={applicant.lastName.value}\r\n                      onChange={(e) =>\r\n                        handleApplicantChange(index, \"lastName\", e.target.value)\r\n                      }\r\n                    />\r\n                    <FormErrorMessage>{errMsg}</FormErrorMessage>\r\n                  </Box>\r\n                  <Box mb={4}>\r\n                    <FormLabel>Passport number</FormLabel>\r\n                    <Input\r\n                      maxLength=\"10\"\r\n                      placeholder=\"Passport number\"\r\n                      size=\"md\"\r\n                      type=\"tel\"\r\n                      value={applicant.passportNumber.value}\r\n                      onChange={(e) =>\r\n                        handleApplicantChange(\r\n                          index,\r\n                          \"passportNumber\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    />\r\n                    <FormErrorMessage>{errMsg}</FormErrorMessage>\r\n                  </Box>\r\n                  <Box mb={4}>\r\n                    <FormLabel>Date of birth</FormLabel>\r\n                    <Input\r\n                      placeholder=\"Date of birth\"\r\n                      size=\"md\"\r\n                      type=\"date\"\r\n                      value={applicant.dateOfBirth.value}\r\n                      onChange={(e) =>\r\n                        handleApplicantChange(\r\n                          index,\r\n                          \"dateOfBirth\",\r\n                          e.target.value\r\n                        )\r\n                      }\r\n                    />\r\n                    <FormErrorMessage>{errMsg}</FormErrorMessage>\r\n                  </Box>\r\n                  <Box mb={4}>\r\n                    <FormLabel>Image</FormLabel>\r\n                    <Input\r\n                      placeholder=\"Image\"\r\n                      size=\"md\"\r\n                      type=\"text\"\r\n                      value={applicant.image.value || \"\"}\r\n                      onChange={(e) =>\r\n                        handleApplicantChange(index, \"image\", e.target.value)\r\n                      }\r\n                    />\r\n                    <FormErrorMessage>\r\n                      The image should be start with \"https://\"\r\n                    </FormErrorMessage>\r\n                  </Box>\r\n                </CardBody>\r\n              </Card>\r\n            ))}\r\n            <Box mb={4} mt={4}>\r\n              <Button type=\"button\" onClick={handleAddApplicant}>\r\n                Add applicant\r\n              </Button>\r\n            </Box>\r\n            <Box mb={4} mt={4}>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </Box>\r\n          </form>\r\n        </Stack>\r\n      ) : (\r\n        <Stack alignItems=\"center\">\r\n          <Spinner\r\n            margin={10}\r\n            thickness=\"4px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"xl\"\r\n          />\r\n        </Stack>\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CreateAppointmentForm;\r\n","import { Box, Container } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport CreateAppointmentForm from \"../components/form/CreateAppointmentForm\";\r\n\r\nfunction Create() {\r\n  return (\r\n    <Container maxW=\"6xl\">\r\n      <Box py={20}>\r\n        <CreateAppointmentForm />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","const getAppointmentCode = (appointment) => {\r\n  const { applicants, email, phone, expectedTravelDate } = appointment;\r\n  const newApplicants = applicants.map((applicant) => ({\r\n    ...applicant,\r\n    dateOfBirth: applicant.dateOfBirth.split(\"T\")[0],\r\n    expectedTravelDate: expectedTravelDate.split(\"T\")[0],\r\n    email,\r\n    phone,\r\n  }));\r\n\r\n  return `\r\n      \r\n      applicants = ${JSON.stringify(newApplicants)}\r\n      document\r\n        .querySelector(\"app-no-form #phone\")\r\n        .dispatchEvent(new Event(\"ngModelChange\"));\r\n      \r\n      applicants.map(async (applicant, index) => {\r\n        await fillInput(\"name\", applicant.firstName, index);\r\n        await fillInput(\"surname\", applicant.lastName, index);\r\n        await fillInput(\"birthLocalDate\", applicant.dateOfBirth, index);\r\n        await fillInput(\"passport\", applicant.passportNumber, index);\r\n        await fillInput(\"applicantEmail\", applicant.email, index);\r\n        await fillInput(\"phone\", applicant.phone, index);\r\n        await fillInput(\r\n          \"expectedDepartureLocalDate\",\r\n          applicant.expectedTravelDate,\r\n          index\r\n        );\r\n      });\r\n      \r\n      async function fillInput(field, value, folderIndex) {\r\n        let ele = document.querySelectorAll(\r\n          'app-no-form form input[name=\"' + field +'\"]'\r\n        )[folderIndex];\r\n        ele.value = value;\r\n        ele.dispatchEvent(new Event(\"input\"));\r\n        ele.dispatchEvent(new Event(\"change\"));\r\n        ele.dispatchEvent(new Event(\"compositionend\"));\r\n      }\r\n      `;\r\n};\r\n\r\nconst getLoginCode = (appointment) => {\r\n  return `\r\n      document.getElementsByName(\"email\")[1].value = \"${appointment}\";\r\n      document.getElementsByName(\"password\")[0].value  = \"Ahmed@2842663\";\r\n      \r\n      `;\r\n};\r\n\r\nconst isInputDisabled = (premission, fieldName) => {\r\n  switch (premission) {\r\n    case \"admin\":\r\n      return false;\r\n    case \"static\":\r\n      return true;\r\n    case \"createdBy\":\r\n      return fieldName === \"assign\";\r\n    case \"assigned\":\r\n      return fieldName !== \"status\" && fieldName !== \"email\";\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nconst filterAppointments = (appointments, fieldName, searchTerm) => {\r\n  return appointments.filter(\r\n    (appointment) =>\r\n      appointment.applicants.length === 0 ||\r\n      appointment.applicants.some((applicant) =>\r\n        applicant[fieldName].startsWith(searchTerm.toUpperCase())\r\n      )\r\n  );\r\n};\r\n\r\nexport {\r\n  getAppointmentCode,\r\n  getLoginCode,\r\n  isInputDisabled,\r\n  filterAppointments,\r\n};\r\n"],"names":["_useCreateAppointment","useCreateAppointmentMutation","_useCreateAppointment2","_slicedToArray","createAppointment","_useCreateAppointment3","isLoading","data","isSuccess","error","_useState","isError","useState","_useState2","errMsg","_useState3","_useState4","fnameErr","_useState5","_useState6","expicDate","_useState7","_useState8","emailMsg","_useState9","_useState10","phoneMsg","_useState11","_useState12","input","setInput","_useState13","_useState14","isSubmitted","_useState15","_useState16","phoneNumber","setPhoneNumber","_useState17","_useState18","expectedDate","setExpectedDate","_useState19","_useState20","owner","setOwner","_useState21","_useState22","visa","setVisa","_useState23","_useState24","status","setStatus","_useState25","_useState26","note","setNote","_useState27","firstName","value","err","lastName","passportNumber","dateOfBirth","image","_useState28","applicants","setApplicants","_useGetAppointmentsQu","useGetAppointmentsQuery","optionsData","optionsIsSuccess","toast","useToast","getApplicantsData","map","applicant","Object","fromEntries","entries","_ref","_ref2","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","isFieldsEmpty","today","formData","wrap","_context","prev","next","preventDefault","some","startsWith","title","isClosable","position","duration","abrupt","length","Date","every","getTime","expectedTravelDate","target","elements","date","email","phone","stop","_x","apply","arguments","useEffect","description","_jsxs","Text","children","_jsx","ButtonGroup","size","Button","onClick","navigator","clipboard","writeText","getAppointmentCode","_objectSpread","appointment","_ref4","message","concat","handleApplicantChange","index","field","newApplicants","_toConsumableArray","handleConfirmDelete","splice","Stack","alignItems","Spinner","margin","thickness","speed","emptyColor","color","spacing","Heading","onSubmit","Card","variant","CardBody","Box","mb","FormControl","isInvalid","FormLabel","Input","name","placeholder","type","onChange","handleTravelDateChange","FormErrorMessage","InputGroup","InputLeftAddon","pattern","maxLength","onKeyDown","key","test","newPhoneNumber","replace","handlePhoneChange","HStack","mt","Select","textAlign","handleOwnerChange","attributes","ownerEmuns","handleVisaChange","visaEmuns","handleStatusChange","statusEmuns","top","right","IconButton","icon","AiOutlineClose","render","bg","p","borderRadius","justifyContent","colorScheme","fontWeight","closeAll","handleDeleteApplicant","_defineProperty","Container","maxW","py","CreateAppointmentForm","split","JSON","stringify","getLoginCode","isInputDisabled","premission","fieldName","filterAppointments","appointments","searchTerm","filter","toUpperCase"],"sourceRoot":""}