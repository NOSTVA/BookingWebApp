{"version":3,"file":"static/js/331.89d2a13a.chunk.js","mappings":"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","sources":["components/appointments/Appointment.js","components/appointments/AppointmentsGrid.js","components/filters/Search.js","components/filters/Filters.js","components/filters/AppointmentsFilter.js","utils/functions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableContainer,\r\n  Stack,\r\n  Select,\r\n  IconButton,\r\n  Editable,\r\n  EditableInput,\r\n  EditablePreview,\r\n  Tooltip,\r\n  Card,\r\n  CardBody,\r\n  Avatar,\r\n  useBreakpointValue,\r\n  Checkbox,\r\n  Button,\r\n  Link,\r\n  PopoverContent,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverHeader,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  Code,\r\n  PopoverFooter,\r\n  ButtonGroup,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  DeleteIcon,\r\n  CopyIcon,\r\n  DragHandleIcon,\r\n  AtSignIcon,\r\n  ChevronDownIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport {\r\n  useDeleteApplicantMutation,\r\n  useUpdateApplicantMutation,\r\n  useUpdateAppointmentMutation,\r\n  useDeleteAppointmentMutation,\r\n  useGetAllUsersQuery,\r\n  useDeassignUserMutation,\r\n  useAssignUserMutation,\r\n} from \"../../store/api-slice\";\r\nimport {\r\n  getApplicantCode,\r\n  getAppointmentCode,\r\n  getLoginCode,\r\n  isInputDisabled,\r\n} from \"../../utils/functions\";\r\n\r\nfunction Appointment({ appointment, attributes, permission, isFetching }) {\r\n  const { applicants, expectedTravelDate, email, phone } = appointment;\r\n\r\n  const newApplicants = applicants.map((applicant) => ({\r\n    ...applicant,\r\n    dateOfBirth: applicant.dateOfBirth.split(\"T\")[0],\r\n    expectedTravelDate: expectedTravelDate.split(\"T\")[0],\r\n    email,\r\n    phone,\r\n  }));\r\n\r\n  return (\r\n    <Card variant=\"outline\" size=\"sm\">\r\n      <CardBody>\r\n        <AppointmentDetails\r\n          permission={permission}\r\n          appointment={appointment}\r\n          attributes={attributes}\r\n          isFetching={isFetching}\r\n        />\r\n        <Applicants\r\n          permission={permission}\r\n          applicants={newApplicants}\r\n          isFetching={isFetching}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Applicants({ applicants, permission, isFetching }) {\r\n  const [deleteApplicant] = useDeleteApplicantMutation();\r\n  const [updateApplicant] = useUpdateApplicantMutation();\r\n  const [editedValues, setEditedValues] = useState({});\r\n\r\n  // controllers\r\n  function handleDeleteClick(id) {\r\n    deleteApplicant(id);\r\n  }\r\n\r\n  async function handleEditClick(id) {\r\n    await updateApplicant({\r\n      id,\r\n      data: editedValues[id],\r\n    });\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleCancelClick(id) {\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleChange(id, property, value) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: { ...prevState[id], [property]: value },\r\n    }));\r\n  }\r\n\r\n  function handleEdit(id, property) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: {\r\n        ...prevState[id],\r\n        [property]: applicants.find((applicant) => applicant._id === id)[\r\n          property\r\n        ],\r\n      },\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table size=\"sm\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th textAlign=\"center\">Image</Th>\r\n              <Th textAlign=\"center\">First Name</Th>\r\n              <Th textAlign=\"center\">Last Name</Th>\r\n              <Th textAlign=\"center\">Passport</Th>\r\n              <Th textAlign=\"center\">Date Of Birth</Th>\r\n              {!isInputDisabled(permission, \"delete\") && (\r\n                <Th textAlign=\"center\">Actions</Th>\r\n              )}\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {applicants.length > 0 ? (\r\n              applicants.map((applicant) => {\r\n                const {\r\n                  _id = null,\r\n                  firstName,\r\n                  lastName,\r\n                  passportNumber,\r\n                  dateOfBirth,\r\n                  image,\r\n                } = applicant;\r\n                return (\r\n                  <Tr key={_id}>\r\n                    <Td textAlign=\"center\">\r\n                      <Avatar\r\n                        style={{ cursor: \"pointer\" }}\r\n                        src={image}\r\n                        as={Link}\r\n                        href={image}\r\n                        target=\"_blank\"\r\n                      />\r\n                    </Td>\r\n\r\n                    <Td textAlign=\"center\">\r\n                      <InputArea\r\n                        permission={permission}\r\n                        fieldName=\"firstName\"\r\n                        handleEditClick={handleEditClick}\r\n                        handleCancelClick={handleCancelClick}\r\n                        handleEdit={handleEdit}\r\n                        handleChange={handleChange}\r\n                        value={editedValues[_id]?.firstName ?? firstName}\r\n                        isFetching={isFetching}\r\n                        id={_id}\r\n                      />\r\n                    </Td>\r\n\r\n                    <Td textAlign=\"center\">\r\n                      <InputArea\r\n                        permission={permission}\r\n                        fieldName=\"lastName\"\r\n                        handleEditClick={handleEditClick}\r\n                        handleCancelClick={handleCancelClick}\r\n                        handleEdit={handleEdit}\r\n                        handleChange={handleChange}\r\n                        value={editedValues[_id]?.lastName ?? lastName}\r\n                        isFetching={isFetching}\r\n                        id={_id}\r\n                      />\r\n                    </Td>\r\n\r\n                    <Td textAlign=\"center\">\r\n                      <InputArea\r\n                        permission={permission}\r\n                        fieldName=\"passportNumber\"\r\n                        handleEditClick={handleEditClick}\r\n                        handleCancelClick={handleCancelClick}\r\n                        handleEdit={handleEdit}\r\n                        handleChange={handleChange}\r\n                        isFetching={isFetching}\r\n                        id={_id}\r\n                        value={\r\n                          editedValues[_id]?.passportNumber ?? passportNumber\r\n                        }\r\n                      />\r\n                    </Td>\r\n\r\n                    <Td textAlign=\"center\">\r\n                      <InputArea\r\n                        permission={permission}\r\n                        fieldName=\"dateOfBirth\"\r\n                        handleEditClick={handleEditClick}\r\n                        handleCancelClick={handleCancelClick}\r\n                        handleEdit={handleEdit}\r\n                        handleChange={handleChange}\r\n                        isFetching={isFetching}\r\n                        id={_id}\r\n                        value={\r\n                          editedValues[_id]?.dateOfBirth?.split(\"T\")[0] ??\r\n                          dateOfBirth.split(\"T\")[0]\r\n                        }\r\n                      />\r\n                    </Td>\r\n\r\n                    <Td textAlign=\"center\">\r\n                      <Stack direction=\"row\" align=\"center\" justify=\"center\">\r\n                        {!isInputDisabled(permission, \"delete\") && (\r\n                          <IconButton\r\n                            aria-label=\"Delete\"\r\n                            size=\"sm\"\r\n                            icon={<DeleteIcon />}\r\n                            onClick={() => handleDeleteClick(_id)}\r\n                          />\r\n                        )}\r\n                        {!isInputDisabled(permission, \"copy_code\") && (\r\n                          <Popover placement=\"left\" isLazy={true}>\r\n                            <PopoverTrigger>\r\n                              <IconButton\r\n                                variant=\"outline\"\r\n                                aria-label=\"Copy code\"\r\n                                size=\"sm\"\r\n                                icon={<CopyIcon />}\r\n                              />\r\n                            </PopoverTrigger>\r\n                            <PopoverContent width={600} textAlign=\"left\">\r\n                              <PopoverHeader fontWeight=\"semibold\">\r\n                                Code\r\n                              </PopoverHeader>\r\n                              <PopoverArrow />\r\n                              <PopoverCloseButton />\r\n                              <PopoverBody>\r\n                                <Code\r\n                                  whiteSpace=\"pre-wrap\"\r\n                                  sx={{ wordBreak: \"break-all\" }}\r\n                                  maxH={400}\r\n                                  overflowY=\"scroll\"\r\n                                >\r\n                                  {getApplicantCode(applicant)}\r\n                                </Code>\r\n                              </PopoverBody>\r\n                              <PopoverFooter\r\n                                display=\"flex\"\r\n                                justifyContent=\"flex-end\"\r\n                              >\r\n                                <ButtonGroup size=\"sm\">\r\n                                  <Button\r\n                                    colorScheme=\"blue\"\r\n                                    onClick={() =>\r\n                                      navigator.clipboard.writeText(\r\n                                        getApplicantCode(applicant)\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    Copy\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </PopoverFooter>\r\n                            </PopoverContent>\r\n                          </Popover>\r\n                        )}\r\n                      </Stack>\r\n                    </Td>\r\n                  </Tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <Tr>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n                <Td textAlign=\"center\">NULL</Td>\r\n              </Tr>\r\n            )}\r\n          </Tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AppointmentDetails({\r\n  permission,\r\n  appointment,\r\n  attributes,\r\n  isFetching,\r\n}) {\r\n  const { ownerEmuns, visaEmuns, statusEmuns } = attributes;\r\n  const {\r\n    _id: appointmentId,\r\n    numberOfApplicants,\r\n    expectedTravelDate,\r\n    email,\r\n    phone,\r\n    note,\r\n    status,\r\n    owner,\r\n    visa,\r\n  } = appointment;\r\n\r\n  const { data: usersRes, isLoading: isUsersLoading } = useGetAllUsersQuery();\r\n  const [deleteAppointment] = useDeleteAppointmentMutation();\r\n  const [deassignUser] = useDeassignUserMutation();\r\n  const [assignUser] = useAssignUserMutation();\r\n  const [updateAppointment] = useUpdateAppointmentMutation();\r\n\r\n  const [usersState, setUsersState] = useState({});\r\n  const [editedValues, setEditedValues] = useState({});\r\n  const layout = useBreakpointValue({ base: \"default\", md: \"fixed\" });\r\n\r\n  useEffect(() => {\r\n    if (!isUsersLoading) {\r\n      const states = {};\r\n      usersRes?.user.map(\r\n        (user) => (states[user._id] = isUserAssigned(user._id, appointment))\r\n      );\r\n\r\n      setUsersState(states);\r\n    }\r\n  }, [appointment, isUsersLoading, usersRes]);\r\n\r\n  function isUserAssigned(id, appointment) {\r\n    return appointment.assignedUsers.includes(id);\r\n  }\r\n\r\n  async function handleUserChange(e, { userId, appointmentId }) {\r\n    const isChecked = e.target.checked;\r\n    if (isChecked) {\r\n      await assignUser({ userId, appointmentId });\r\n    } else {\r\n      await deassignUser({ userId, appointmentId });\r\n    }\r\n    setUsersState((prevState) => ({ ...prevState, [userId]: isChecked }));\r\n  }\r\n\r\n  function handleEditClick(id) {\r\n    updateAppointment({\r\n      id,\r\n      data: editedValues[id],\r\n    });\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleEdit(id, property) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: {\r\n        ...prevState[id],\r\n        [property]: appointment[property],\r\n      },\r\n    }));\r\n  }\r\n\r\n  function handleCancelClick(id) {\r\n    setEditedValues((prevState) => {\r\n      const newState = { ...prevState };\r\n      delete newState[id];\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  function handleChange(id, property, value) {\r\n    setEditedValues((prevState) => ({\r\n      ...prevState,\r\n      [id]: { ...prevState[id], [property]: value },\r\n    }));\r\n  }\r\n\r\n  function handleSelectChange(e, fieldName) {\r\n    updateAppointment({\r\n      id: appointmentId,\r\n      data: { [fieldName]: e.target.value },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Stack direction=\"row\">\r\n      <Card mb={5} size=\"sm\" width=\"full\">\r\n        <CardBody>\r\n          <TableContainer>\r\n            <Table size=\"sm\" layout={layout} width=\"full\" variant=\"simple\">\r\n              <Tbody>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Expected Travel Date:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"expectedTravelDate\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={\r\n                        editedValues[appointmentId]?.expectedTravelDate?.split(\r\n                          \"T\"\r\n                        )[0] ?? expectedTravelDate.split(\"T\")[0]\r\n                      }\r\n                    />\r\n                  </Td>\r\n                  <Td>\r\n                    <Text as=\"b\">Status:</Text>\r\n                  </Td>\r\n                  <Td>\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"status\"\r\n                      value={editedValues[appointmentId]?.status ?? status}\r\n                      handleChange={handleSelectChange}\r\n                      enums={statusEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Email:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"email\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.email ?? email}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    <Text as=\"b\">Visa:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"visa\"\r\n                      value={editedValues[appointmentId]?.visa ?? visa}\r\n                      handleChange={handleSelectChange}\r\n                      enums={visaEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Mobile Number:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"phone\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.phone ?? phone}\r\n                    />\r\n                  </Td>\r\n                  <Td>\r\n                    <Text as=\"b\">Owner:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <SelectArea\r\n                      permission={permission}\r\n                      fieldName=\"owner\"\r\n                      value={editedValues[appointmentId]?.owner ?? owner}\r\n                      handleChange={handleSelectChange}\r\n                      enums={ownerEmuns}\r\n                      isFetching={isFetching}\r\n                    />\r\n                  </Td>\r\n                </Tr>\r\n                <Tr>\r\n                  <Td>\r\n                    <Text as=\"b\">Note:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\" overflow=\"clip\">\r\n                    <InputArea\r\n                      permission={permission}\r\n                      fieldName=\"note\"\r\n                      handleEditClick={handleEditClick}\r\n                      handleCancelClick={handleCancelClick}\r\n                      handleEdit={handleEdit}\r\n                      handleChange={handleChange}\r\n                      isFetching={isFetching}\r\n                      id={appointmentId}\r\n                      value={editedValues[appointmentId]?.note ?? (note || \"-\")}\r\n                    />\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    <Text as=\"b\">No. Applicants:</Text>\r\n                  </Td>\r\n                  <Td textAlign=\"center\">\r\n                    <Text>{numberOfApplicants?.toString()}</Text>\r\n                  </Td>\r\n                </Tr>\r\n              </Tbody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardBody>\r\n      </Card>\r\n      <Stack>\r\n        {!isInputDisabled(permission, \"delete\") && (\r\n          <Tooltip label=\"Delete\" placement=\"right\">\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              size=\"sm\"\r\n              icon={<DeleteIcon />}\r\n              variant=\"outline\"\r\n              onClick={() => deleteAppointment(appointmentId)}\r\n            />\r\n          </Tooltip>\r\n        )}\r\n        {!isInputDisabled(permission, \"assign\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Assign\"\r\n                size=\"sm\"\r\n                icon={<DragHandleIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent>\r\n              <PopoverHeader fontWeight=\"semibold\">Users</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                {!isUsersLoading &&\r\n                  usersRes?.user.map(({ email, _id }) => (\r\n                    <Checkbox\r\n                      key={_id}\r\n                      onChange={(e) =>\r\n                        handleUserChange(e, { userId: _id, appointmentId })\r\n                      }\r\n                      isChecked={usersState[_id]}\r\n                    >\r\n                      {email}\r\n                    </Checkbox>\r\n                  ))}\r\n              </PopoverBody>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n        {!isInputDisabled(permission, \"copy_email\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Copy code\"\r\n                size=\"sm\"\r\n                icon={<AtSignIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent width={600} textAlign=\"left\">\r\n              <PopoverHeader fontWeight=\"semibold\">Code</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                <Code\r\n                  width=\"full\"\r\n                  whiteSpace=\"pre-wrap\"\r\n                  sx={{ wordBreak: \"break-all\" }}\r\n                >\r\n                  {getLoginCode(appointment.email)}\r\n                </Code>\r\n              </PopoverBody>\r\n              <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                <ButtonGroup size=\"sm\">\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    onClick={() =>\r\n                      navigator.clipboard.writeText(\r\n                        getLoginCode(appointment.email)\r\n                      )\r\n                    }\r\n                  >\r\n                    Copy\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </PopoverFooter>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n        {!isInputDisabled(permission, \"copy_email\") && (\r\n          <Popover placement=\"left\" isLazy={true}>\r\n            <PopoverTrigger>\r\n              <IconButton\r\n                variant=\"outline\"\r\n                aria-label=\"Copy code\"\r\n                size=\"sm\"\r\n                icon={<CopyIcon />}\r\n              />\r\n            </PopoverTrigger>\r\n            <PopoverContent width={600} textAlign=\"left\">\r\n              <PopoverHeader fontWeight=\"semibold\">Code</PopoverHeader>\r\n              <PopoverArrow />\r\n              <PopoverCloseButton />\r\n              <PopoverBody>\r\n                <Code\r\n                  width=\"full\"\r\n                  whiteSpace=\"pre-wrap\"\r\n                  sx={{ wordBreak: \"break-all\" }}\r\n                >\r\n                  {getAppointmentCode(appointment)}\r\n                </Code>\r\n              </PopoverBody>\r\n              <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                <ButtonGroup size=\"sm\">\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    onClick={() =>\r\n                      navigator.clipboard.writeText(\r\n                        getAppointmentCode(appointment)\r\n                      )\r\n                    }\r\n                  >\r\n                    Copy\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </PopoverFooter>\r\n            </PopoverContent>\r\n          </Popover>\r\n        )}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nfunction InputArea({\r\n  permission,\r\n  fieldName,\r\n  value,\r\n  id,\r\n  handleEditClick,\r\n  handleCancelClick,\r\n  handleEdit,\r\n  handleChange,\r\n  isFetching,\r\n}) {\r\n  return isInputDisabled(permission, fieldName) ? (\r\n    <Text textAlign=\"center\">{value}</Text>\r\n  ) : (\r\n    <Editable\r\n      onSubmit={() => handleEditClick(id)}\r\n      onCancel={() => handleCancelClick(id)}\r\n      onEdit={() => handleEdit(id, fieldName)}\r\n      isDisabled={isInputDisabled(permission, fieldName)}\r\n      submitOnBlur={false}\r\n      value={value}\r\n    >\r\n      {isFetching ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Tooltip label=\"Click to edit\">\r\n          <EditablePreview />\r\n        </Tooltip>\r\n      )}\r\n      <EditableInput\r\n        onChange={(e) => handleChange(id, fieldName, e.target.value)}\r\n      />\r\n    </Editable>\r\n  );\r\n}\r\n\r\nfunction SelectArea({\r\n  permission,\r\n  fieldName,\r\n  value,\r\n  handleChange,\r\n  enums,\r\n  isFetching,\r\n}) {\r\n  return isInputDisabled(permission, fieldName) ? (\r\n    <Text textAlign=\"center\">{value}</Text>\r\n  ) : (\r\n    <Select\r\n      textAlign=\"center\"\r\n      size=\"sm\"\r\n      value={value}\r\n      icon={isFetching ? <Spinner /> : <ChevronDownIcon />}\r\n      onChange={(e) => handleChange(e, fieldName)}\r\n    >\r\n      {enums.map((label, index) => (\r\n        <option key={index} value={label}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n","import React from \"react\";\r\n\r\nimport { Stack } from \"@chakra-ui/react\";\r\nimport Appointment from \"./Appointment\";\r\n\r\nfunction AppointmentsGrid({\r\n  permission,\r\n  appointments,\r\n  attributes,\r\n  isFetching,\r\n}) {\r\n  return (\r\n    <Stack spacing={5}>\r\n      {appointments.map((appointment) => (\r\n        <Appointment\r\n          key={appointment._id}\r\n          appointment={appointment}\r\n          attributes={attributes}\r\n          permission={permission}\r\n          isFetching={isFetching}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default AppointmentsGrid;\r\n","import React from \"react\";\r\nimport { FormControl, Input } from \"@chakra-ui/react\";\r\n\r\nfunction Search({ searchTerm, setSearchTerm }) {\r\n  return (\r\n    <FormControl>\r\n      <Input\r\n        variant=\"filled\"\r\n        type=\"text\"\r\n        placeholder=\"Search by passport number\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Stack, Select } from \"@chakra-ui/react\";\r\nfunction Filters({ filterField, setFilterFields, attributes }) {\r\n  const onSelectChange = (field, value) => {\r\n    setFilterFields((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\">\r\n      <SelectFilter\r\n        options={attributes.ownerEmuns}\r\n        value={filterField.owner}\r\n        onChange={(value) => onSelectChange(\"owner\", value)}\r\n      />\r\n      <SelectFilter\r\n        options={attributes.visaEmuns}\r\n        value={filterField.visa}\r\n        onChange={(value) => onSelectChange(\"visa\", value)}\r\n      />\r\n      <SelectFilter\r\n        options={attributes.statusEmuns}\r\n        value={filterField.status}\r\n        onChange={(value) => onSelectChange(\"status\", value)}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nconst SelectFilter = ({ options, value, onChange }) => (\r\n  <Select value={value} onChange={(e) => onChange(e.target.value)}>\r\n    <option value=\"\">All</option>\r\n    {options.map((value, index) => (\r\n      <option key={index} value={value}>\r\n        {value}\r\n      </option>\r\n    ))}\r\n  </Select>\r\n);\r\n\r\nexport default Filters;\r\n","import { Card, CardBody, Stack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Search from \"./Search\";\r\nimport Filters from \"./Filters\";\r\n\r\nfunction AppointmentsFilter({\r\n  searchTerm,\r\n  setSearchTerm,\r\n  filterField,\r\n  setFilterFields,\r\n  attributes,\r\n}) {\r\n  return (\r\n    <Card variant=\"outline\" size=\"sm\">\r\n      <CardBody>\r\n        <Stack>\r\n          <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n          <Filters\r\n            filterField={filterField}\r\n            setFilterFields={setFilterFields}\r\n            attributes={attributes}\r\n          />\r\n        </Stack>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AppointmentsFilter;\r\n","export const getAppointmentCode = (appointment) => {\r\n  const { applicants, email, phone, expectedTravelDate } = appointment;\r\n  const newApplicants = applicants.map((applicant) => ({\r\n    ...applicant,\r\n    dateOfBirth: applicant.dateOfBirth.split(\"T\")[0],\r\n    expectedTravelDate: expectedTravelDate.split(\"T\")[0],\r\n    email,\r\n    phone,\r\n  }));\r\n\r\n  return `\r\n      \r\n      applicants = ${JSON.stringify(newApplicants)}\r\n    document\r\n      .querySelector(\"app-no-form #phone\")\r\n      .dispatchEvent(new Event(\"ngModelChange\"));\r\n    \r\n    applicants.map(async (applicant, index) => {\r\n      await fillInput(\"name\", applicant.firstName, index);\r\n      await fillInput(\"surname\", applicant.lastName, index);\r\n      await fillInput(\"birthLocalDate\", applicant.dateOfBirth, index);\r\n      await fillInput(\"passport\", applicant.passportNumber, index);\r\n      await fillInput(\"applicantEmail\", applicant.email, index);\r\n      await fillInput(\"phone\", applicant.phone, index);\r\n      await fillInput(\r\n        \"expectedDepartureLocalDate\",\r\n        applicant.expectedTravelDate,\r\n        index\r\n      );\r\n    });\r\n    \r\n    async function fillInput(field, value, folderIndex) {\r\n      let ele = document.querySelectorAll(\r\n        'app-no-form form input[name=\"' + field +'\"]'\r\n      )[folderIndex];\r\n      ele.value = value;\r\n      ele.dispatchEvent(new Event(\"input\"));\r\n      ele.dispatchEvent(new Event(\"change\"));\r\n      ele.dispatchEvent(new Event(\"compositionend\"));\r\n    }\r\n      `;\r\n};\r\n\r\nexport const getApplicantCode = (applicant) => {\r\n  return `\r\n      let index = 0;\r\n      applicant = ${JSON.stringify(applicant)}\r\n      document.querySelector(\"app-no-form #phone\").dispatchEvent(new Event(\"ngModelChange\"));\r\n\r\n        await fillInput(\"name\", applicant.firstName, index);\r\n        await fillInput(\"surname\", applicant.lastName, index);\r\n        await fillInput(\"birthLocalDate\", applicant.dateOfBirth, index);\r\n        await fillInput(\"passport\", applicant.passportNumber, index);\r\n        await fillInput(\"applicantEmail\", applicant.email, index);\r\n        await fillInput(\"phone\", applicant.phone, index);\r\n        await fillInput(\"expectedDepartureLocalDate\",applicant.expectedTravelDate,index);\r\n\r\n      \r\n      async function fillInput(field, value, folderIndex) {\r\n        let ele = document.querySelectorAll(\r\n          'app-no-form form input[name=\"' + field +'\"]'\r\n        )[folderIndex];\r\n        ele.value = value;\r\n        ele.dispatchEvent(new Event(\"input\"));\r\n        ele.dispatchEvent(new Event(\"change\"));\r\n        ele.dispatchEvent(new Event(\"compositionend\"));\r\n      }\r\n      `;\r\n};\r\n\r\nexport const getLoginCode = (appointment) => {\r\n  return `\r\n      document.getElementsByName(\"email\")[1].value = \"${appointment}\";\r\n      document.getElementsByName(\"password\")[0].value  = \"Ahmed2842663\";\r\n      \r\n      `;\r\n};\r\n\r\nexport const isInputDisabled = (premission, fieldName) => {\r\n  switch (premission) {\r\n    case \"admin\":\r\n      return false;\r\n    case \"static\":\r\n      return true;\r\n    case \"createdBy\":\r\n      return fieldName === \"assign\";\r\n    case \"assigned\":\r\n      return fieldName !== \"status\" && fieldName !== \"email\";\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nexport const filterAppointments = (appointments, fieldName, searchTerm) => {\r\n  return appointments.filter(\r\n    (appointment) =>\r\n      appointment.applicants.length === 0 ||\r\n      appointment.applicants.some((applicant) =>\r\n        applicant[fieldName].startsWith(searchTerm.toUpperCase())\r\n      )\r\n  );\r\n};\r\n"],"names":["Applicants","_ref2","applicants","permission","isFetching","_useDeleteApplicantMu","useDeleteApplicantMutation","deleteApplicant","_slicedToArray","_useUpdateApplicantMu","useUpdateApplicantMutation","updateApplicant","_useState","useState","_useState2","editedValues","setEditedValues","handleEditClick","_x","_handleEditClick","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","data","prevState","newState","_objectSpread","stop","handleCancelClick","handleChange","property","value","_defineProperty","handleEdit","find","applicant","_id","_jsx","_Fragment","children","TableContainer","_jsxs","Table","size","Thead","Tr","Th","textAlign","isInputDisabled","Tbody","length","map","_editedValues$_id$fir","_editedValues$_id","_editedValues$_id$las","_editedValues$_id2","_editedValues$_id$pas","_editedValues$_id3","_editedValues$_id$dat","_editedValues$_id4","_editedValues$_id4$da","_applicant$_id","firstName","lastName","passportNumber","dateOfBirth","image","Td","Avatar","style","cursor","src","as","Link","href","target","InputArea","fieldName","split","Stack","direction","align","justify","IconButton","icon","DeleteIcon","onClick","Popover","placement","isLazy","PopoverTrigger","variant","CopyIcon","PopoverContent","width","PopoverHeader","fontWeight","PopoverArrow","PopoverCloseButton","PopoverBody","Code","whiteSpace","sx","wordBreak","maxH","overflowY","getApplicantCode","PopoverFooter","display","justifyContent","ButtonGroup","Button","colorScheme","navigator","clipboard","writeText","AppointmentDetails","_ref3","_editedValues$appoint","_editedValues$appoint2","_editedValues$appoint3","_editedValues$appoint4","_editedValues$appoint5","_editedValues$appoint6","_editedValues$appoint7","_editedValues$appoint8","_editedValues$appoint9","_editedValues$appoint10","_editedValues$appoint11","_editedValues$appoint12","_editedValues$appoint13","_editedValues$appoint14","_editedValues$appoint15","appointment","attributes","ownerEmuns","visaEmuns","statusEmuns","appointmentId","numberOfApplicants","expectedTravelDate","email","phone","note","status","owner","visa","_useGetAllUsersQuery","useGetAllUsersQuery","usersRes","isUsersLoading","isLoading","_useDeleteAppointment","useDeleteAppointmentMutation","deleteAppointment","_useDeassignUserMutat","useDeassignUserMutation","deassignUser","_useAssignUserMutatio","useAssignUserMutation","assignUser","_useUpdateAppointment","useUpdateAppointmentMutation","updateAppointment","_useState3","_useState4","usersState","setUsersState","_useState5","_useState6","layout","useBreakpointValue","base","md","_handleUserChange","_callee2","e","_ref4","userId","isChecked","_context2","checked","handleSelectChange","useEffect","states","user","assignedUsers","includes","isUserAssigned","Card","mb","CardBody","Text","overflow","SelectArea","enums","toString","Tooltip","label","DragHandleIcon","_ref5","Checkbox","onChange","_x2","_x3","handleUserChange","AtSignIcon","getLoginCode","getAppointmentCode","_ref6","Editable","onSubmit","onCancel","onEdit","isDisabled","submitOnBlur","Spinner","EditablePreview","EditableInput","_ref7","Select","ChevronDownIcon","index","_ref","newApplicants","appointments","spacing","Appointment","searchTerm","setSearchTerm","FormControl","Input","type","placeholder","SelectFilter","options","filterField","setFilterFields","onSelectChange","field","Search","Filters","concat","JSON","stringify","premission","filterAppointments","filter","some","startsWith","toUpperCase"],"sourceRoot":""}